# Windsurf Rules for chinese-tutor project

## Plan changes and implement them in small, manageable chunks

When you have a large change in mind, first come up with a plan which breaks it down into smaller, manageable chunks that are independent of each other.

Implement each chunk one at a time, testing and verifying that each part works before moving on to the next.

Commit each chunk after it is implemented and verified.

## Always ensure that the chinese-tutor pyenv virtualenv is activated before running any commands

This ensures that all dependencies are available and commands run in the correct environment.

To activate the virtualenv, run:
  pyenv activate chinese-tutor

To check if the virtualenv is active, run:
  `python -c "import sys, os; print(sys.prefix);`

And if this says something with `chinese-tutor`, then the virtualenv is active.

If you haven't created this virtualenv yet, you can do so with:
  pyenv virtualenv 3.x.x chinese-tutor
  pyenv local chinese-tutor

Where 3.x.x is your preferred Python version.

## Always run `pre-commit` before declaring a feature as done

This ensures that all code is formatted and linted correctly before it is committed.

To check and fix code, run:
  pre-commit run --all-files

## Write commit messages in a Conventional Commit format

Once a feature is completed, prepare a commit message in a Conventional Commit format and share it with the user.

A Conventional Commit message has the following format:

  <type>(<scope>): <subject>

Where:
  - <type> is one of: `feat`, `fix`, `perf`, `style`, `refactor`, `test`, `docs`, `build`, `ci`, `chore`
  - <scope> is an optional scope that provides additional context
  - <subject> is a short description of the change

Example:
  `feat: add support for Cantonese flashcards`
